//
// Matrices for converting to and from an order-5 Bezier.
//


// Matrices for approximating order-5 Bezier by lower order Bezier

const float kBezier5To4[5][6] = 
{
    {  0.9960f,  0.0198f, -0.0397f,  0.0397f, -0.0198f,  0.0040f },
    { -0.2242f,  1.1210f,  0.2579f, -0.2579f,  0.1290f, -0.0258f },
    {  0.0833f, -0.4167f,  0.8333f,  0.8333f, -0.4167f,  0.0833f },
    { -0.0258f,  0.1290f, -0.2579f,  0.2579f,  1.1210f, -0.2242f },
    {  0.0040f, -0.0198f,  0.0397f, -0.0397f,  0.0198f,  0.9960f }
};

const float kBezier5To3[4][6] = 
{
    {  0.9603f,  0.1270f, -0.1111f, -0.0317f,  0.0873f, -0.0317f },
    { -0.4286f,  0.8810f,  0.7619f,  0.0476f, -0.4286f,  0.1667f },
    {  0.1667f, -0.4286f,  0.0476f,  0.7619f,  0.8810f, -0.4286f },
    { -0.0317f,  0.0873f, -0.0317f, -0.1111f,  0.1270f,  0.9603f }
};

const float kBezier5To2[3][6] = 
{
    {  0.8214f,  0.3214f,  0.0000f, -0.1429f, -0.1071f,  0.1071f },
    { -0.4286f,  0.2857f,  0.6429f,  0.6429f,  0.2857f, -0.4286f },
    {  0.1071f, -0.1071f, -0.1429f,  0.0000f,  0.3214f,  0.8214f }
};


// Matrices for upsampling lower-order Bezier to order-5 Bezier

const float kBezier4To5[6][5] = 
{
    {  1.0000f, -0.0000f, -0.0000f,  0.0000f,  0.0000f },
    {  0.2000f,  0.8000f,  0.0000f, -0.0000f, -0.0000f },
    {  0.0000f,  0.4000f,  0.6000f,  0.0000f,  0.0000f },
    { -0.0000f,  0.0000f,  0.6000f,  0.4000f, -0.0000f },
    { -0.0000f, -0.0000f, -0.0000f,  0.8000f,  0.2000f },
    { -0.0000f,  0.0000f,  0.0000f, -0.0000f,  1.0000f }
};

const float kBezier3To5[6][4] = 
{
    {  1.0000f, -0.0000f, -0.0000f,  0.0000f },
    {  0.4000f,  0.6000f, -0.0000f, -0.0000f },
    {  0.1000f,  0.6000f,  0.3000f,  0.0000f },
    {  0.0000f,  0.3000f,  0.6000f,  0.1000f },
    { -0.0000f, -0.0000f,  0.6000f,  0.4000f },
    { -0.0000f,  0.0000f, -0.0000f,  1.0000f }
};

const float kBezier2To5[6][3] = 
{
    {  1.0000f, -0.0000f,  0.0000f },
    {  0.6000f,  0.4000f, -0.0000f },
    {  0.3000f,  0.6000f,  0.1000f },
    {  0.1000f,  0.6000f,  0.3000f },
    { -0.0000f,  0.4000f,  0.6000f },
    {  0.0000f,  0.0000f,  1.0000f }
};


// Matrix for evaluating L2 difference between two order-5 Bezier basis functions

// L2(c1, c2) = sqrt((c1 - c2)t M (c1 - c2)
//            = sqrt(dot(c1 - c2, kBezierError5 * (c1 - c2)) 

const float kBezierError5[6][6] = 
{
    { 0.09091f, 0.04545f, 0.02020f, 0.00758f, 0.00216f, 0.00036f },
    { 0.04545f, 0.05051f, 0.03788f, 0.02165f, 0.00902f, 0.00216f },
    { 0.02020f, 0.03788f, 0.04329f, 0.03608f, 0.02165f, 0.00758f },
    { 0.00758f, 0.02165f, 0.03608f, 0.04329f, 0.03788f, 0.02020f },
    { 0.00216f, 0.00902f, 0.02165f, 0.03788f, 0.05051f, 0.04545f },
    { 0.00036f, 0.00216f, 0.00758f, 0.02020f, 0.04545f, 0.09091f }
};

// Matrix for converting integrals v order-5 Bezier basis functions to corresponding Bezier coefficients

const float kToBezier5[6][6] = 
{
    {    36.00f,   -90.00f,   120.00f,   -90.00f,    36.00f,    -6.00f },
    {   -90.00f,   372.00f,  -594.00f,   489.60f,  -207.60f,    36.00f },
    {   120.00f,  -594.00f,  1144.80f, -1064.40f,   489.60f,   -90.00f },
    {   -90.00f,   489.60f, -1064.40f,  1144.80f,  -594.00f,   120.00f },
    {    36.00f,  -207.60f,   489.60f,  -594.00f,   372.00f,   -90.00f },
    {    -6.00f,    36.00f,   -90.00f,   120.00f,   -90.00f,    36.00f }
};
